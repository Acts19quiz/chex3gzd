bool BotAnim = TRUE;

function void TDBots_SwapWeapons (void)
{
	if(CheckInventory("Pistol"))
	{
		TakeInventory("Fist", 1);
		TakeInventory("Pistol", 1);
		GiveInventory("BotFist", 1);
		GiveInventory("BotPistol", 1);
		
		SetWeapon("BotPistol");
		
		CurrentGame = GAME_DOOM;
		VanillaDoom = TRUE;
	}
	else if(CheckInventory("GoldWand"))
	{
		TakeInventory("Staff", 1);
		TakeInventory("GoldWand", 1);
		GiveInventory("BotStaff", 1);
		GiveInventory("BotGoldWand", 1);
		
		SetWeapon("BotGoldWand");
		
		CurrentGame = GAME_HERETIC;
	}
	else if(CheckInventory("CWeapMace"))
	{
		TakeInventory("CWeapMace", 1);
		GiveInventory("BotCWeapMace", 1);
		
		SetWeapon("BotCWeapMace");
		
		CurrentGame = GAME_HEXEN;
	}
	else if(CheckInventory("FWeapFist"))
	{
		TakeInventory("FWeapFist", 1);
		GiveInventory("BotFWeapFist", 1);
		
		SetWeapon("BotFWeapFist");
		
		CurrentGame = GAME_HEXEN;
	}
	else if(CheckInventory("MWeapWand"))
	{
		TakeInventory("MWeapWand", 1);
		GiveInventory("BotMWeapWand", 1);
		
		SetWeapon("BotMWeapWand");
		
		CurrentGame = GAME_HEXEN;
	}
	else if(CheckInventory("PunchDagger"))
	{
		TakeInventory("PunchDagger", 1);
		GiveInventory("BotPunchDagger", 1);
		
		SetWeapon("BotPunchDagger");
		
		CurrentGame = GAME_STRIFE;
	}
	else if(CheckInventory("MiniZorcher"))
	{
		TakeInventory("MiniZorcher", 1);
		TakeInventory("Bootspoon", 1);
		GiveInventory("BotBootspoon", 1);
		GiveInventory("BotMiniZorcher", 1);
		
		SetWeapon("BotMiniZorcher");
		
		CurrentGame = GAME_DOOM; //For all intents and purposes, Chex is Doom.
	}
	
	str CGVAR = GetCVAR("tdbots_currentgame");
	
	if(CGVAR != -1)
	{
		CurrentGame = CGVAR;
	}
	else
	{
		SetCVAR("tdbots_currentgame", CurrentGame);
	}
}

function void TDBots_Weaponize (void)
{
	if(GetCVAR("tdbots_rocketarena") == TRUE) {return;}
	if(GetCVAR("tdbots_weaponize") > 5) 
	{
		if(random(0,4) == 1)
		{
			if(CurrentGame == GAME_DOOM) {TDB_GiveItem("BFG9000");}
			else if(CurrentGame == GAME_HERETIC) {TDB_GiveItem("Mace");}
			else if(CurrentGame == GAME_STRIFE) {TDB_GiveItem("StrifeGrenadeLauncher");}
		}
	}
	if(GetCVAR("tdbots_weaponize") > 4) 
	{
		if(random(0,4) == 1)
		{
			//No SSG equivalent in Heretic so only Doom here.
			if(CurrentGame == GAME_DOOM) {TDB_GiveItem("SuperShotgun");}
			else if(CurrentGame == GAME_STRIFE) {TDB_GiveItem("Mauler");}
		}
	}
	if(GetCVAR("tdbots_weaponize") > 3) 
	{
		if(random(0,3) == 1)
		{
			if(CurrentGame == GAME_DOOM) {TDB_GiveItem("PlasmaRifle");}
			else if(CurrentGame == GAME_HERETIC) {TDB_GiveItem("SkullRod");}
			else if(CurrentGame == GAME_STRIFE) {TDB_GiveItem("MiniMissileLauncher");}
		}
	}
	if(GetCVAR("tdbots_weaponize") > 2) 
	{
		if(random(0,3) == 1)
		{
			if(CurrentGame == GAME_DOOM) {TDB_GiveItem("RocketLauncher");}
			else if(CurrentGame == GAME_HERETIC) {TDB_GiveItem("PhoenixRod");}
			else if(CurrentGame == GAME_STRIFE) {TDB_GiveItem("AssaultGun");}
			else if(CurrentGame == GAME_HEXEN)
			{TDB_GiveItem("CWeapWraithverge"); TDB_GiveItem("FWeapQuietus"); TDB_GiveItem("MWeapBloodscourge");}
		}
	}
	if(GetCVAR("tdbots_weaponize") > 1) 
	{
		if(random(0,3) == 1)
		{
			if(CurrentGame == GAME_DOOM) {TDB_GiveItem("Chaingun");}
			else if(CurrentGame == GAME_HERETIC) {TDB_GiveItem("Blaster");}
			else if(CurrentGame == GAME_STRIFE) {TDB_GiveItem("AssaultGun");}
			else if(CurrentGame == GAME_HEXEN)
			{TDB_GiveItem("CWeapFlame"); TDB_GiveItem("FWeapHammer"); TDB_GiveItem("MWeapLighting");}
		}
	}
	if(GetCVAR("tdbots_weaponize") > 0)
	{
		if(CurrentGame == GAME_DOOM) {TDB_GiveItem("Shotgun");}
		else if(CurrentGame == GAME_HERETIC) {TDB_GiveItem("Crossbow");}
		else if(CurrentGame == GAME_HEXEN)
		{TDB_GiveItem("CWeapStaff"); TDB_GiveItem("FWeapAxe"); TDB_GiveItem("MWeapFrost");}
		else if(CurrentGame == GAME_STRIFE) {TDB_GiveItem("StrifeCrossbow");}
	}
}

function void TDBots_Setup (bool respawning)
{	
	if(PlayerIsBot(PlayerNumber()) == TRUE || GetCVAR("tdbots_playerbot") == TRUE)
	{
		if( (GetCVAR("tdbots_enable") == TRUE) || (PlayerIsBot(PlayerNumber()) == FALSE) )
		{
			if(GetCVAR("tdbots_lessfov") == TRUE) {GiveInventory("tdbots_lessfov",1);}
			if(BotAnim == TRUE) {ACS_NamedExecuteAlways("TDBots_BotAnimation", 0);}
			if(GetCVAR("tdbots_buff") == TRUE) {ACS_NamedExecuteAlways("TDBots_BotBuff",0);}
			Codepointer("BotFunc_StartUp");
			
			if(Respawning == FALSE)
			{
				if(Gametype() <= GAME_NET_COOPERATIVE)
				{TDBots_Chat(MSG_ENTERCOOP);}
				else
				{TDBots_Chat(MSG_ENTER);}
			}
			
			ACS_NamedExecuteAlways("TDBots_TeleportBot",0);
			
			if( (GetCVAR("tdbots_usenodes")) || (GetCVAR("tdbots_learnfromplayer")) )
			{
				GiveInventory("TDBots_NavNodes", 1);
			}
			
			if(GetActorProperty(0, APROP_ACCURACY) == 0)
			{SetActorProperty(0, APROP_ACCURACY, BOTSPEED);}
			
			//Magic value to make the bots not move
			else if(GetActorProperty(0, APROP_ACCURACY) == -1)
			{SetActorProperty(0, APROP_ACCURACY, BOTSPEED);}
		}
	} 
}

str TDB_Weapons[27] =
{
	"BotPistol",
	"BotShotgun",
	"BotSuperShotgun",
	"BotChaingun",
	"BotRocketLauncher",
	"BotPlasmaRifle",
	"BotBFG9000",
	
	"BotGoldWand",
	"BotMace",
	"BotSkullRod",
	"BotPhoenixRod",
	"BotBlaster",
	"BotCrossbow",
	
	"BotStrifeGrenadeLauncher",
	"BotMauler",
	"BotMiniMissileLauncher",
	"BotAssaultGun",
	"BotStrifeCrossbow",
	
	"BotCWeapWraithverge",
	"BotFWeapQuietus",
	"BotMWeapBloodscourge",
	"BotCWeapFlame",
	"BotFWeapHammer",
	"BotMWeapLighting",
	"BotCWeapStaff",
	"BotFWeapAxe",
	"BotMWeapFrost"
};

function void TDB_RandomWeapon (void)
{
	if(random(0,100) > 2) {return;}
	switch(CurrentGame)
	{
		case GAME_DOOM:
		if(!VanillaDoom) {return;}
		SetWeapon( TDB_Weapons[ random(1,6) ] );
		break;
		
		case GAME_HERETIC:
		SetWeapon( TDB_Weapons[ random(8,12) ] );
		break;
		
		case GAME_STRIFE:
		SetWeapon( TDB_Weapons[ random(14,17) ] );
		break;
		
		case GAME_HEXEN:
		SetWeapon( TDB_Weapons[ random(19,26) ] );
		break;
	}
}

Script "TDBots_BotSetup" ENTER
{
	if(Gametype() <= GAME_NET_COOPERATIVE)
	{
		ACS_NamedExecuteAlways("TDBots_WalkNoding", 0);
	}
	
	TDBots_SwapWeapons();
	delay(1);
	TDBots_Setup(FALSE);
	delay(2);
	TDBots_Weaponize();
	TDBots_RA_Equip();
	delay(4);
	Thing_Remove(987005);
}

Script "TDBots_BotSetup_Respawn" RESPAWN
{
	if(Gametype() <= GAME_NET_COOPERATIVE)
	{
		ACS_NamedExecuteAlways("TDBots_WalkNoding", 0);
	}

	TDBots_SwapWeapons();
	delay(1);
	TDBots_Setup(TRUE);
	delay(2);
	TDBots_Weaponize();
	TDBots_RA_Equip();
	delay(4);
	Thing_Remove(987005);
}

//Gives the bots ammunition and armor every five seconds, to help them a bit
Script "TDBots_BotBuff" (void)
{
	delay(35 * 5);
	if(GetCVAR("tdbots_buff") == 1)
	{
		while(GetActorProperty(0, APROP_HEALTH) > 0)
		{
			if(CurrentGame == GAME_DOOM) 	{Codepointer("BotFunc_BuffDoom");}
			if(CurrentGame == GAME_HERETIC) {Codepointer("BotFunc_BuffHeretic");}
			if(CurrentGame == GAME_HEXEN) 	{Codepointer("BotFunc_BuffHexen");}
			if(CurrentGame == GAME_STRIFE) 	{Codepointer("BotFunc_BuffStrife");}
			delay(1);
			Thing_Remove(987000);
			delay(35 * 5);
		}
	}
	else {terminate;}
}

Script "TDBots_BotEasyMode" (void)
{
	if( GetCvar("tdbots_easymode") || CheckInventory("BotForceInacc") )
	{
		SetActorAngle(0, GetActorAngle(0) + random(-2048, 2048));
	}
}

Script "TDBots_UseItems" (int Roam)
{
	int Rand;
	if(Roam == TRUE) //Called from roaming state?
	{
		if(CurrentGame == GAME_HERETIC || GAME_HEXEN)
		{
			Rand = Random(0,8);
			
			if(Rand == 0)
			{UseInventory("ArtiHealth");}
			else if(Rand == 1)
			{UseInventory("ArtiSuperHealth");}
			else if(Rand == 2)
			{UseInventory("ArtiFly");}
			else if(Rand == 3)
			{
				UseInventory("ArtiInvulnerability"); //Heretic's
				UseInventory("ArtiInvulnerability2");//Hexen's
			}
			else if(Rand == 4)
			{UseInventory("ArtiTeleport");}
			//No torch, since obviously bots don't need it
		}
	}
	else //No, so we assume it's been called from the attack state.
	{
		if(CurrentGame == GAME_HERETIC)
		{
			Rand = Random(0,4);
			
			if(Rand == 0)
			{UseInventory("ArtiEgg");}
			else if(Rand == 1)
			{UseInventory("ArtiTomeOfPower");}
			else if(Rand == 2)
			{UseInventory("ArtiInvisibility");}
			else if(Rand == 3)
			{UseInventory("ArtiTimeBomb");}
			else if(Rand == 4)
			{UseInventory("ArtiPork");}
		}
		else if(CurrentGame == GAME_HEXEN)
		{
			Rand = Random(0,6);
			
			if(Rand == 0)
			{UseInventory("ArtiEgg");}
			else if(Rand == 1)
			{UseInventory("ArtiDarkServant");}
			else if(Rand == 2)
			{UseInventory("ArtiTeleportOther");}
			else if(Rand == 3)
			{UseInventory("ArtiBoostArmor");}
			else if(Rand == 4)
			{UseInventory("ArtiBlastRadius");}
			else if(Rand == 5)
			{UseInventory("ArtiPork");}
			else if(Rand == 6)
			{
				UseInventory("ArtiPoisonBag"); //Doesn't look like a bag but ok.
				UseInventory("ArtiPoisonBag1");
				UseInventory("ArtiPoisonBag2");
				UseInventory("ArtiPoisonBag3");
			}
		}
	}
}

Script "TDBots_CheckForCustomModules" OPEN
{
	//Roaming
	if(TDB_ActorExists("TDBots_Custom_RoamLoop1"))
	{TDB_Custom_Roam1 = TRUE;}
	
	if(TDB_ActorExists("TDBots_Custom_RoamLoop2"))
	{TDB_Custom_Roam2 = TRUE;}
	
	//Attacking
	if(TDB_ActorExists("TDBots_Custom_AttackLoop1"))
	{TDB_Custom_Attk1 = TRUE;}
	
	if(TDB_ActorExists("TDBots_Custom_AttackLoop2"))
	{TDB_Custom_Attk2 = TRUE;}
	
	//Global flags
	if(TDB_ActorExists("TDBots_NoAnimation"))
	{BotAnim = FALSE;}
}

function void AnimateTDBot (str state)
{
	if(BotAnim == FALSE) {return;}
	SetActorState(0, state, 1);
	SetPlayerProperty(0,1,4);
}

function bool TDBotDead (void)
{
	bool BotIsDead;
	if(GetActorProperty(0, APROP_HEALTH) <= 0)
	{
		Codepointer("BotFunc_Die");
		SetActorState(0, "Death", 1);
		BotIsDead = TRUE;
	}
	else
	{
		BotIsDead = FALSE;
	}
	return BotIsDead;
}